*쓰레드는 우선순위를 가진다.
우선순위가 동일하면 CPU할당시간을 나눔.
우선순위는 변경 가능(디폴트는 5임) > 1~10있음. 높은것 우선
사용 > MThread t1 = new MThread(1, 1~10);

*낮은 우선순위의 쓰레드 실행
sleep([인자])를 이용하여 양보.

*쓰레드 라이프 사이클
1)new -> Runnable (<- | ->) Blocked
		  -> Dead(run메소드 완료시)
->Runnable자체가 실행하고잇는게 아니라 대기중임 > 스케쥴러에 의해

sleep, join 메소드 호출은 Blocked 상태.

*쓰레드의 메모리 구성
모든 쓰레드는 스택을 제외한 메소드 영역과 힙을 공유.
메소드 호출을 위해 사용되는 메모리공간이 스택이기 때문.

*쓰레드간 메모리 영역의 공유 예제
Sum s = new Sum();
aT t1 = new aT(s,1,50);
aT t2 = new aT(s,51,100);
t1.start();
t2.start();
->5050이 안나오고 작게 나올수도 있음. > Main의 메소드 같이 쓰기에.

*JOIN?
쓰레드가 끝날때까지 메인이 기다려줄게. 하는 뜻
t1.join();
t2.join();

