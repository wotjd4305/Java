*abstract - 상속해서 사용하도록 강제하는 것. 단독으로 못씀.

*abstract class A안에 abstract 메소드가 있으면?
->이것도 구현(오버라이딩)해줘야 오류가 안뜸.

*추상클래스, 메소드를 이용하는 이유?
->코드의 중복, 유지보수의 편의성 등을 꾀함.
->기능은 꼭있어야 하며, 상황에 따라 달라지는 부분은 사용자가 책임짐.

*중복은 상위클래스로 올려서 중복을 줄이자.

*디자인 패턴 - 반복되는 패턴을 모아 정리한 것.
->상호간의 생각 일치에 도움