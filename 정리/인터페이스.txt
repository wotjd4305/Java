*인터페이스 - final과 abstract와 같은 대표적인 규제.
->상속이 상위 클래스의 기능을 하위클래스가 물려받는것이라고한다면, 인터페이스는 하위 클래스에 특정한 메소드가 반드시 존재하도록 강제.

*사용이유?
->어떠한 기능을 만들어달라와 같은 약속, 즉 다른 개발자가 이 기능을 개발해줄것을 전제.
->상대방이 구현 완료 시, Dummy클래스를 제거하고 그 클래스를 사용하면됨.

*인터페이스와 추상클래스의 차이?
->추상클래스 - 상속을 받아서 기능을 확장시키는데 목적(클래스임)
->인터페이스 - 구현을 강제함으로써 객체의 같은 동작 보장 
->(+)자바는 다중상속이 불가능하기 떄문.

*인터페이스 규칙
1)하나의 클래스가 여러개의 인터페이스 구현 가능
->ex) class car implemnets vehicle, engine
2)인터페이스도 상속 가능
3)인터페이스 멤버는 반드시 public
->if) public 생략시 default가 되는것이 아닌 public이 됨. 무조건 public이기 때문에.